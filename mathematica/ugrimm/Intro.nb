(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     31696,       1258]*)
(*NotebookOutlinePosition[     60662,       2335]*)
(*  CellTagsIndexPosition[     60618,       2331]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
  StyleBox["Notebook Intro5.nb:\nA Brief Introduction to ",
    PrivateFontOptions->{"FontPostScriptName"->Automatic}],
  StyleBox["Mathematica",
    FontSlant->"Italic",
    PrivateFontOptions->{"FontPostScriptName"->Automatic}]
}], "Title",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["(Version 1.0, 12 January 2005, Uwe Grimm)", "Subtitle"],

Cell[TextData[{
  "prepared by Uwe Grimm for the summer school on Aperiodic Order, Edmonton, \
200",
  Cell[BoxData[
      \(TraditionalForm\`0\)]],
  "\n(based on a previous file by Rudolf A. R\[ODoubleDot]mer and Uwe Grimm)"
}], "Subtitle",
  Evaluatable->False,
  TextAlignment->Center,
  AspectRatioFixed->True,
  FontSize->14,
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["What is a Notebook and how to use it?", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "What you see now is a ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " notebook. It contains text, graphics, numerical calculations, definitions \
of functions, and programs. On the right hand side of each notebook, you will \
see brackets, which enclose different parts of the text (\"",
  StyleBox["cells",
    FontColor->RGBColor[1, 0, 0]],
  "\") in different levels. Using these brackets, you can selectively tell ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " which statement to evaluate. Just ",
  StyleBox["double-click",
    FontColor->RGBColor[0, 0, 1]],
  " on the cell bracket and then hit ",
  StyleBox["SHIFT+RETURN",
    FontColor->RGBColor[0, 0, 1]],
  " together.\n\nSome cells (like this one) contain only text and cannot be \
evaluated. You can recognize different cell types by the form of their \
brackets.\[RawEscape]There may also be so-called initialization cells which \
are executed automatically when the notebook file is opened.\n\nYou can do \
almost anything (like changing cell types, cutting and pasting text, find \
words in the notebook, changing text color,...) by using the ",
  StyleBox["menus",
    FontColor->RGBColor[1, 0, 0]],
  ". For some commands, also the key code is given in the menu, which can be \
used alternatively. However, one has to take care to the definition of the ",
  StyleBox["Mod1",
    FontColor->RGBColor[0, 0, 1]],
  " and ",
  StyleBox["Mod2",
    FontColor->RGBColor[0, 0, 1]],
  " keys - these can be set under ",
  StyleBox["Preferences",
    FontColor->RGBColor[1, 0, 0]],
  " in the ",
  StyleBox["Edit",
    FontColor->RGBColor[1, 0, 0]],
  " menu.\n\nYou can also format text and equations in a style that suits \
your personal taste. Besides choosing colors and text fonts, also Greek \
letters such as \[Alpha], \[Beta], \[Gamma] ... and many more special symbols \
available. these allow you to write also formulas in a \"readable\" form, for \
instance ",
  Cell[BoxData[
      \(TraditionalForm\`\[CapitalGamma](
          z) = \[Integral]\_0\%\[Infinity]\( t\^\(z - 1\)\) \(e\^\(-t\)\) d  
            t\)]],
  " for the \[CapitalGamma] function.  You can find information about the use \
of such symbols, as well as the explanation of built-in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands and additional ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " packages in the ",
  StyleBox["Help",
    FontColor->RGBColor[1, 0, 0]],
  " menu.\n\nNow, close this section by ",
  StyleBox["double-clicking ",
    FontColor->RGBColor[0, 0, 1]],
  "on the enclosing bracket and open the next part..."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Calculations", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "You can do arithmetics with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " just as you would on a calculator. For instance, type the input ",
  StyleBox["5+7",
    FontColor->RGBColor[0, 0, 1]],
  ", then hit ",
  StyleBox["SHIFT+RETURN",
    FontColor->RGBColor[0, 0, 1]],
  " together and ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " will print the result 12. Try it here:"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["5+7", "Input",
  AspectRatioFixed->True],

Cell["You can calculate special function values", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Gamma[1.25]\)], "Input"],

Cell["or even integrals", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["NIntegrate[ Sin[ Sin[x] ], {x,0,Pi} ]", "Input",
  AspectRatioFixed->True],

Cell["and many other things.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
If you terminate an expression by a semicolon, and evaluate the \
expression, the output is suppressed\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["5+7;", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "At each executed cell you find something like \"",
  StyleBox["In[4]:=",
    FontColor->RGBColor[0, 0, 1]],
  "\" that denotes the 4th input you gave in this session. When executed \
again, it is overwritten by the most recent value. Similarly, the output is \
number \"",
  StyleBox["Out[4]=",
    FontColor->RGBColor[0, 0, 1]],
  "\", and you can use it in later expressions, for example"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Out[4]^2", "Input",
  AspectRatioFixed->True],

Cell["or", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["%4^2", "Input",
  AspectRatioFixed->True],

Cell["\<\
For the recent outputs, there is a shorter version:
% denotes the most recent output, %% the previous one, and so on.\
\>", "Text",\

  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "Informations about a command can be obtained via the ",
  StyleBox["Help",
    FontColor->RGBColor[1, 0, 0]],
  " menu, or by entering a question mark with a command name, where a star * \
stands for any expression:"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["?*Int*", "Input",
  AspectRatioFixed->True],

Cell["?NIntegrate", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "Note that upper- and lowercase letters are different! Built-in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands start with an uppercase letter."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphics", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "One of the nice features of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is that you can easily plot your results. Here is a simple example of a \
real function"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Plot[Sin[Exp[x]],{x,0,Pi}];", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "If you ",
  StyleBox["click",
    FontColor->RGBColor[0, 0, 1]],
  " on that graphical output, a frame will occur, which allows you to resize \
the graphics according to your wish."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
There is a variety of commands that allows you to plot things in \
various ways, for example\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["ContourPlot[Sin[x+Sin[y]],{x,-2,2},{y,-2,2}];", "Input",
  AspectRatioFixed->True],

Cell["Plot3D[Sin[x+Sin[y]],{x,-2,2},{y,-2,2}];", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "Here, the numbers at the end specify the range of ",
  StyleBox["x",
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  " and ",
  StyleBox["y",
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  " values. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["You can also produce 3D parametric surfaces", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
ParametricPlot3D[ 
 {u Sin[t], u Cos[t], t/3},
 {t,0,15},{u,-1,1},
 Ticks->None];\
\>", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "\"",
  StyleBox["Ticks->None",
    FontColor->RGBColor[0, 0, 1]],
  "\" is an option that tells ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " not to use tick marks on the axes. There are many other options on plots, \
to give you an impression try"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Options[Plot3D]", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "which lists the available options and their pre-defined values, or the \
actual values if you use the commands ",
  StyleBox["Options",
    FontColor->RGBColor[0, 0, 1]],
  " or ",
  StyleBox["FullOptions",
    FontColor->RGBColor[0, 0, 1]],
  " for a specific plot, for example"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(\(Plot3D[Sin[x + Sin[y]], {x, \(-2\), 2}, {y, \(-2\), 2}, 
      \[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ \ Boxed\  -> \ False, \ 
      ColorOutput\  -> \ GrayLevel, \n\ \ \ \ \ \ \ \ \ \ \ \ \ 
      PlotPoints -> 25]; \)\)], "Input"],

Cell[BoxData[
    \(Options[%]\)], "Input"],

Cell["\<\
One can furthermore construct pictures from lines, points, circles, \
disks, polygon and much more, and use different colors, for example\
\>", \
"Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
Show[ Graphics [
  {RGBColor[0,0,1],
   Line[{{-1,-1},{-1,1},{1,1},{2,0},
         {1,-1},{-1,-1}}],
   RGBColor[1,0,0],
   Polygon[{{1,0},
            {Cos[2*Pi/5],Sin[2*Pi/5]},
            {Cos[4*Pi/5],Sin[4*Pi/5]},
            {Cos[6*Pi/5],Sin[6*Pi/5]},
            {Cos[8*Pi/5],Sin[8*Pi/5]}}],
   RGBColor[0,1,0],
   Disk[{3/2,0},1/4]}],
   AspectRatio -> Automatic];\
\>", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "The option ",
  StyleBox["AspectRatio -> Automatic",
    FontColor->RGBColor[0, 0, 1]],
  " forces ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " to scale the figure according to its natural lengths."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "The command ",
  StyleBox["Show",
    FontColor->RGBColor[0, 0, 1]],
  " can also be used to combine several plots into one:"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(plsin = Plot[Sin[x], {x, 0, 4\ Pi}]; \n
    plcos = Plot[Cos[x], {x, 0, 4\ Pi}]; \nShow[plsin, plcos]; \)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Algebra and Calculus", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is also, and most importantly, an algebraic problem solver."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["9(2+x)(x+y)+(x+y)^2", "Input",
  AspectRatioFixed->True],

Cell["You can expand such expressions", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Expand[%]\)], "Input"],

Cell["and factor them", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Factor[%]\)], "Input"],

Cell["or extract the coefficients of certain variables", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Collect[%, x]\)], "Input"],

Cell["We now want to take the 3rd power of this expression.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Expand[ %^3 ]", "Input",
  AspectRatioFixed->True],

Cell["This looks weird, so lets simplify it.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Simplify[%]", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "We can also integrate algebraically. The ",
  StyleBox["//Simplify",
    FontColor->RGBColor[0, 0, 1]],
  " does the same job as above. It is an example fo the many ways one can \
program ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Integrate[x^2 Sin[x]^2, x] //Simplify", "Input",
  AspectRatioFixed->True],

Cell["Differentiation works as follows", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(D[%, x]\)], "Input"],

Cell["\<\
For a function of several variables, you can for instance calculate \
the second
derivative with respect to x and the first derivative with respect to y as \
follows\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(D[9 \((2 + x)\) \((x + y)\)^3 + \((x + y)\)^2, {x, 2}, {y, 
        1}]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving Equations", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["This is an equation.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["x^3 - 7 x^2 - 3 a x == 0", "Input",
  AspectRatioFixed->True],

Cell["What's the solution?", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Solve[ %, x ]", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "The output is a list of ",
  StyleBox["rules, ",
    FontColor->RGBColor[1, 0, 0]],
  "specifying replacements of certain varibales in the expression.  These can \
be applied to expressions as follows"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["(x^3 - 7 x^2)/(3 a) /. % //Simplify", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "see the section on ",
  StyleBox["rules",
    FontColor->RGBColor[0, 0, 1]],
  " for more detail."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Lists", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "Nearly everything in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is a list. The next command generates a matrix whose elements are \
represented as lists of lists."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["matrix = Table[1/(i+j-1),{i,3},{j,3}]", "Input",
  AspectRatioFixed->True],

Cell["Let's find the inverse matrix.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["invmatrix = Inverse[matrix]", "Input",
  AspectRatioFixed->True],

Cell["Is it really the inverse?", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["matrix . invmatrix //MatrixForm", "Input",
  AspectRatioFixed->True],

Cell["Looks OK to me. One more check...", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["invmatrix . matrix //MatrixForm", "Input",
  AspectRatioFixed->True],

Cell["\<\
Supposse we have measured a signal and now want to plot this. \
\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
signallist= 
 Table[{i^2,i+Random[Real,{0,0.5}]},{i,10}]\
\>", "Input",
  AspectRatioFixed->True],

Cell["ListPlot[ signallist ];", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "There are lots of nice ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands to handle lists. You can access a single element by"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["matrix[[3]][[2]]", "Input",
  AspectRatioFixed->True],

Cell["or by", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["matrix[[3,2]]", "Input",
  AspectRatioFixed->True],

Cell["The number of elements in a list can be seen as follows", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Length[matrix]", "Input",
  AspectRatioFixed->True],

Cell["Dimensions[matrix]", "Input",
  AspectRatioFixed->True],

Cell["\<\
More about things you cando with lists in the follwing section...\
\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulating Lists", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["You can concatenate lists", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Join[{1,2,3},{2,3,4},{3,4,5}]", "Input",
  AspectRatioFixed->True],

Cell["sort them", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Sort[%]", "Input",
  AspectRatioFixed->True],

Cell["or keep only the different elements", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Union[%]", "Input",
  AspectRatioFixed->True],

Cell["You can reverse the order of the elements", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Reverse[%]", "Input",
  AspectRatioFixed->True],

Cell["or shift them cyclically", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["RotateRight[%,2]", "Input",
  AspectRatioFixed->True],

Cell["\<\
Of course, you can calculate intersections and complements of lists\
\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Intersection[%,{0,1,2}]", "Input",
  AspectRatioFixed->True],

Cell["Complement[%%,{0,1,2}]", "Input",
  AspectRatioFixed->True],

Cell["You can also select certain elements, for instance", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Select[{1,3,5,7,9},#>3&]", "Input",
  AspectRatioFixed->True],

Cell["\<\
selects those elements that are greater than 3. For the structure \
of the function that performs the comparison see the section on functions \
below.\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
One can check whether something occurs in a list, and compute where \
is occurs:\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["MemberQ[{1,3,5,7,9},3]", "Input",
  AspectRatioFixed->True],

Cell["Position[{1,3,5,7,9},3]", "Input",
  AspectRatioFixed->True],

Cell["MemberQ[{1,3,5,7,9},4]", "Input",
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Executing Commands on Lists", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "There are several ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands that allow you to execute functions on elements of lists in a \
selective way. If f is some arbitrary function, you can for instance use"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Map[f,matrix]", "Input",
  AspectRatioFixed->True],

Cell["to apply it to all elements. ", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Map[f,matrix,{2}]", "Input",
  AspectRatioFixed->True],

Cell["\<\
applies it to all elements of the elements of the list, \
whereas\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Map[f,matrix,2]", "Input",
  AspectRatioFixed->True],

Cell["\<\
applies it to both elements at first and second levels. MapIndexed \
allows you to also access the position of the element in the list:\
\>", \
"Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["MapIndexed[f,{1,3,5,7,9}]", "Input",
  AspectRatioFixed->True],

Cell["Another useful command is Apply, which acts as follows", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Apply[f,matrix,2]", "Input",
  AspectRatioFixed->True],

Cell["\<\
which makes it very easy to do things as sum all elements in a \
list:\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Apply[Plus,{1,3,5,7,9}]", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "Another nice command is ",
  StyleBox["Nest",
    FontColor->RGBColor[0, 0, 1]],
  " which allows you to apply a function repeatedly"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Nest[f, x, 4]\)], "Input"],

Cell[TextData[{
  "and ",
  StyleBox["Nestlist",
    FontColor->RGBColor[0, 0, 1]],
  " gives you a list of all intermediate steps"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(NestList[f, x, 4]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rules", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "You can replace variables in an expression by applying a ",
  StyleBox["rule",
    FontColor->RGBColor[0, 0, 1]]
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Expand[\((x + 1)\)^5]\  /. \ {x\  \[Rule] \ 2\ y}\)], "Input"],

Cell[TextData[{
  "But ",
  StyleBox["rules",
    FontColor->RGBColor[0, 0, 1]],
  " can do much more than that, for example"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(tab1\  = \ Table[i + j - 1, {i, 8}, {j, 8}]\)], "Input"],

Cell[BoxData[
    \(tab1\  /. \ \((n_Integer\  /; \ 
            Mod[n, 2] \[Equal] 0)\) \[RuleDelayed] \ n/2\)], "Input"],

Cell["\<\
divides all even numbers in the list by two, and the following \
command applies the rule recursively until nothing changes any more, thus in \
this case until all numbers are odd:\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(tab1\  //. \ \((n_Integer\  /; \ 
            Mod[n, 2] \[Equal] 0)\) \[RuleDelayed] \ n/2\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Strings", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "Thus ",
  StyleBox["rules",
    FontColor->RGBColor[0, 0, 1]],
  " are extremely useful for recursive replacements, for example"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(fibo[0]\  = \ {"\<S\>"}; \nfibo[1]\  = \ {"\<L\>"}; \n
    fibo[n_]\  := \ 
      \(fibo[n]\  = \ 
        Flatten[fibo[n - 1]\  /. 
            \ {"\<S\>" \[Rule] {"\<L\>"}, \ 
              "\<L\>" \[Rule] {"\<L\>", "\<S\>"}}]\); \)], "Input"],

Cell["yields the Fibonacci sequence of letters S and L", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(fibo[10]\)], "Input"],

Cell[TextData[{
  "Here, the variables \"L\" and \"S\" here are treated as ",
  StyleBox["strings",
    FontColor->RGBColor[0, 0, 1]],
  ", therefore you can apply string functions to manipulate them, for \
example"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(Apply[StringJoin, fibo[10]]\)], "Input"],

Cell["\<\
makes it one word. Here are some more functions that you can use to \
manipulate strings:\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(\(?String*\)\)], "Input"],

Cell[TextData[{
  "Note that the funny-looking definition ",
  StyleBox["fibo[n_]:=fibo[n]=...", "Input"],
  "  tells ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " that it should keep intermediate results in memory. You can see this by\n\
executing the command"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(\(?fibo\)\)], "Input"],

Cell[TextData[{
  "which, besides the definition entered above, lists the values that ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " stored\ninternally."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Variants of Commands", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "For many ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands, there exist several variants that can be used synonymously. For \
example, you can always find out about ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s internal treatment of an expression you entered in the following way"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(tab2\  = \ Table[i*x^i + 3*i, {i, 5}]\)], "Input"],

Cell[BoxData[
    \(FullForm[tab2]\)], "Input"],

Cell["\<\
This shows that, for instance, the following expressions are \
identical:\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(List[1, 2, 3]\), 
    \({1, 2, 3}\)}], "Input"],

Cell[BoxData[{
    \(Plus[a, b]\), 
    \(a + b\)}], "Input"],

Cell[BoxData[{
    \(Times[a, b]\), 
    \(a*b\), 
    \(a\ b\)}], "Input"],

Cell[BoxData[{
    \(Power[x, 3]\), 
    \(x^3\)}], "Input"],

Cell["and so on. Some more examples:", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[{
    \(Rule[x, 1]\), 
    \(x \[Rule] 1\)}], "Input"],

Cell[BoxData[{
    \(RuleDelayed[x_, x\^2]\), 
    \(x_ \[RuleDelayed] x^2\)}], "Input"],

Cell[BoxData[{
    \(Dot[{a, b, c}, {1, 2, 3}]\), 
    \({a, b, c} . {1, 2, 3}\)}], "Input"],

Cell[BoxData[{
    \(Apply[Plus, {a, b, c}]\), 
    \(Plus\ @@{a, b, c}\)}], "Input"],

Cell[BoxData[{
    \(Map[f, {a, b, c}]\), 
    \(f/@{a, b, c}\)}], "Input"],

Cell["\<\
so there are some useful abbreviations if you are able to remember \
these symbols...\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "There are several ways to define functions in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ", the shortest is as follows:"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["func1 = #1^2+#2^2&", "Input",
  AspectRatioFixed->True],

Cell["which is short for", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["func2 = Function[#1^2+#2^2]", "Input",
  AspectRatioFixed->True],

Cell["or", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["func3 = Function[{x3,y3},x3^2+y3^2]", "Input",
  AspectRatioFixed->True],

Cell["\<\
In the first two versions, #1 and #2 denote the first and second \
argument, respectively. The functions can be applied to arguments as \
follows\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["func1[3,4]", "Input",
  AspectRatioFixed->True],

Cell["func2[3,4]", "Input",
  AspectRatioFixed->True],

Cell["func3[3,4]", "Input",
  AspectRatioFixed->True],

Cell["\<\
so all the definitions are identical (except that the two variables \
are given explicit names in the third version).\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Programming", "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "We now want to write small programs in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "Here is a simple ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " program which generates the matrix we already encountered above, but now \
for any dimension n."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
Hilbert[n_] :=
 Table[1/(i+j-1),{i,n},{j,n}]\
\>", "Input",
  AspectRatioFixed->True],

Cell["We try it", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["Hilbert[3]", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "The characters followed by one or more  underscores (these are called \
patterns in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ") are treated variables that are replaced by the actual value if the \
command is executed. ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " has several types of variables (one can use one symbol for an unspecified \
number of variables, provide default values, or specify the type of variable, \
for instance). The \":=\" is a delayed assignment, the right-hand side is \
only calculated when the command is used. "
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
multiplyintegers[n__Integer] := 
  Apply[Times,List[n]];\
\>", "Input",
  AspectRatioFixed->True],

Cell["multiplyintegers[3]", "Input",
  AspectRatioFixed->True],

Cell["multiplyintegers[1,2,3,4]", "Input",
  AspectRatioFixed->True],

Cell["multiplyintegers[1,2.3]", "Input",
  AspectRatioFixed->True],

Cell["\<\
The last expression is not evaluated since the definition of \
multiplyintegers applies only to integer variables.\
\>", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  "For longer or more complex tasks, you may want to write small programs \
that have local variables and execute a number of commands in a row. In ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ", this is done by writing a so-called ",
  StyleBox["Module",
    FontColor->RGBColor[0, 0, 1]],
  ", for instance you can write a routine that removes all elements larger \
than a certain number from a list and then squares the elements and sums them \
as follows:"
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["\<\
sumofsquares[lis_,maxval_] :=
Module[{res},
       res = Select[lis,#<=maxval&];
       res = Map[#^2&,res];
       res = Apply[Plus,res];
       Return[res]];\
\>", "Input",
  AspectRatioFixed->True],

Cell["sumofsquares[{1,3,5,7,9},5]", "Input",
  AspectRatioFixed->True],

Cell[TextData[{
  "Here, res is a local variable that is not defined outside the ",
  StyleBox["Module",
    FontColor->RGBColor[0, 0, 1]],
  "."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[BoxData[
    \(res\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " Packages"
}], "Section",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " comes with various packages of specialized applications. This loads the \
Fourier transfrom package."
}], "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["<<Calculus`FourierTransform`", "Input",
  AspectRatioFixed->True],

Cell["The functions defined in the package are", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["?Calculus`FourierTransform`*", "Input",
  AspectRatioFixed->True],

Cell["FourierTransform[Exp[-t^2],t,w]", "Input",
  AspectRatioFixed->True],

Cell["FourierTransform[Sin[t],t,w]", "Input",
  AspectRatioFixed->True],

Cell["Another package concerns itself with discrete mathematics.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["<<DiscreteMath`Permutations`", "Input",
  AspectRatioFixed->True],

Cell["?DiscreteMath`Permutations`*", "Input",
  AspectRatioFixed->True],

Cell["This gives one possible ordering of 10 particles.", "Text",
  Evaluatable->False,
  AspectRatioFixed->True],

Cell["RandomPermutation[10]", "Input",
  AspectRatioFixed->True]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.0 for X",
ScreenRectangle->{{0, 1280}, {0, 1024}},
WindowSize->{710, 854},
WindowMargins->{{278, Automatic}, {Automatic, 60}},
StyleDefinitions -> Notebook[{
  
  Cell[CellGroupData[{
  Cell["Style Definitions", "Subtitle"],
  
  Cell["\<\
Modify the definitions below to change the default appearance of \
all cells in a given style.  Make modifications to any definition using \
commands in the Format menu.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell["Style Environment Names", "Section"],
  
  Cell[StyleData[All, "Working"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{12, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->9],
  
  Cell[StyleData[All, "Presentation"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{24, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->12],
  
  Cell[StyleData[All, "Condensed"],
    PageWidth->WindowWidth,
    CellLabelMargins->{{8, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->8],
  
  Cell[StyleData[All, "Printout"],
    PageWidth->PaperWidth,
    CellLabelMargins->{{2, Inherited}, {Inherited, Inherited}},
    ScriptMinSize->5,
    PrivateFontOptions->{"FontType"->"Outline"}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Notebook Options", "Section"],
  
  Cell["\<\
The options defined for the style below will be used at the \
Notebook level.\
\>", "Text"],
  
  Cell[StyleData["Notebook"],
    PageHeaders->{{Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"], None, Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"]}, {Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"], None, Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"]}},
    CellFrameLabelMargins->6,
    StyleMenuListing->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headings", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Title"],
    CellMargins->{{12, Inherited}, {20, 40}},
    CellGroupingRules->{"TitleGrouping", 0},
    PageBreakBelow->False,
    TextAlignment->Center,
    CounterIncrements->"Title",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subtitle", 0}, {"Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->36,
    FontWeight->"Bold",
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Title", "Presentation"],
    CellMargins->{{24, 10}, {20, 40}},
    TextAlignment->Center,
    LineSpacing->{1, 0},
    FontSize->44],
  
  Cell[StyleData["Title", "Condensed"],
    CellMargins->{{8, 10}, {4, 8}},
    TextAlignment->Center,
    FontSize->20],
  
  Cell[StyleData["Title", "Printout"],
    CellMargins->{{2, 10}, {12, 30}},
    TextAlignment->Center,
    FontSize->24]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subtitle"],
    CellMargins->{{12, Inherited}, {20, 15}},
    CellGroupingRules->{"TitleGrouping", 10},
    PageBreakBelow->False,
    TextAlignment->Center,
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->24,
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Subtitle", "Presentation"],
    CellMargins->{{24, 10}, {20, 20}},
    TextAlignment->Center,
    LineSpacing->{1, 0},
    FontSize->36,
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Subtitle", "Condensed"],
    CellMargins->{{8, 10}, {4, 4}},
    TextAlignment->Center,
    FontSize->14,
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Subtitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    TextAlignment->Center,
    FontSize->18,
    FontColor->RGBColor[1, 0, 0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubtitle"],
    CellMargins->{{12, Inherited}, {20, 15}},
    CellGroupingRules->{"TitleGrouping", 20},
    PageBreakBelow->False,
    CounterIncrements->"Subsubtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}},
    FontFamily->"Helvetica",
    FontSize->14,
    FontSlant->"Italic"],
  
  Cell[StyleData["Subsubtitle", "Presentation"],
    CellMargins->{{24, 10}, {20, 20}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Subsubtitle", "Condensed"],
    CellMargins->{{8, 10}, {8, 8}},
    FontSize->12],
  
  Cell[StyleData["Subsubtitle", "Printout"],
    CellMargins->{{2, 10}, {12, 8}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Section"],
    CellDingbat->"\[FilledSquare]",
    CellMargins->{{25, Inherited}, {8, 24}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->18,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  
  Cell[StyleData["Section", "Presentation"],
    CellMargins->{{40, 10}, {11, 32}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Section", "Condensed"],
    CellMargins->{{18, Inherited}, {6, 12}},
    FontSize->12],
  
  Cell[StyleData["Section", "Printout"],
    CellMargins->{{13, 0}, {7, 22}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsection"],
    CellDingbat->"\[FilledSmallSquare]",
    CellMargins->{{22, Inherited}, {8, 20}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->14,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsection", "Presentation"],
    CellMargins->{{36, 10}, {11, 32}},
    LineSpacing->{1, 0},
    FontSize->22],
  
  Cell[StyleData["Subsection", "Condensed"],
    CellMargins->{{16, Inherited}, {6, 12}},
    FontSize->12],
  
  Cell[StyleData["Subsection", "Printout"],
    CellMargins->{{9, 0}, {7, 22}},
    FontSize->12]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubsection"],
    CellDingbat->"\[FilledSmallSquare]",
    CellMargins->{{22, Inherited}, {8, 18}},
    CellGroupingRules->{"SectionGrouping", 50},
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubsection", "Presentation"],
    CellMargins->{{34, 10}, {11, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subsubsection", "Condensed"],
    CellMargins->{{17, Inherited}, {6, 12}},
    FontSize->10],
  
  Cell[StyleData["Subsubsection", "Printout"],
    CellMargins->{{9, 0}, {7, 14}},
    FontSize->11]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Body Text", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Text"],
    CellMargins->{{12, 10}, {7, 7}},
    LineSpacing->{1, 3},
    CounterIncrements->"Text",
    FontSize->18,
    FontColor->GrayLevel[0]],
  
  Cell[StyleData["Text", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->22],
  
  Cell[StyleData["Text", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->17],
  
  Cell[StyleData["Text", "Printout"],
    CellMargins->{{2, 2}, {6, 6}},
    TextJustification->0.5,
    FontSize->16]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SmallText"],
    CellMargins->{{12, 10}, {6, 6}},
    LineSpacing->{1, 3},
    CounterIncrements->"SmallText",
    FontFamily->"Helvetica",
    FontSize->9,
    FontColor->GrayLevel[0]],
  
  Cell[StyleData["SmallText", "Presentation"],
    CellMargins->{{24, 10}, {8, 8}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["SmallText", "Condensed"],
    CellMargins->{{8, 10}, {5, 5}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["SmallText", "Printout"],
    CellMargins->{{2, 2}, {5, 5}},
    TextJustification->0.5,
    FontSize->7]
  }, Open  ]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Input/Output", "Section"],
  
  Cell["\<\
The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names. Some attributes for these styles are actually set in FormatType Styles \
(in the last section of this stylesheet). \
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Input"],
    CellMargins->{{45, 10}, {5, 7}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    DefaultFormatType->DefaultInputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    LinebreakAdjustments->{0.85, 2, 10, 0, 1},
    CounterIncrements->"Input",
    FontSize->18,
    FontWeight->"Bold"],
  
  Cell[StyleData["Input", "Presentation"],
    CellMargins->{{72, Inherited}, {8, 10}},
    LineSpacing->{1, 0},
    FontSize->17],
  
  Cell[StyleData["Input", "Condensed"],
    CellMargins->{{40, 10}, {2, 3}},
    FontSize->12],
  
  Cell[StyleData["Input", "Printout"],
    CellMargins->{{39, 0}, {4, 6}},
    LinebreakAdjustments->{0.85, 2, 10, 1, 1},
    FontSize->10]
  }, Closed]],
  
  Cell[StyleData["InputOnly"],
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    LinebreakAdjustments->{0.85, 2, 10, 0, 1},
    CounterIncrements->"Input",
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Output"],
    CellMargins->{{47, 10}, {7, 5}},
    CellEditDuplicate->True,
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    DefaultFormatType->DefaultOutputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    CounterIncrements->"Output",
    FontSize->18],
  
  Cell[StyleData["Output", "Presentation"],
    CellMargins->{{72, Inherited}, {10, 8}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Output", "Condensed"],
    CellMargins->{{41, Inherited}, {3, 2}}],
  
  Cell[StyleData["Output", "Printout"],
    CellMargins->{{39, 0}, {6, 4}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Message"],
    CellMargins->{{45, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    CounterIncrements->"Message",
    StyleMenuListing->None,
    FontSize->16,
    FontColor->RGBColor[0, 0, 1]],
  
  Cell[StyleData["Message", "Presentation"],
    CellMargins->{{72, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Message", "Condensed"],
    CellMargins->{{41, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Message", "Printout"],
    CellMargins->{{39, Inherited}, {Inherited, Inherited}},
    FontColor->GrayLevel[0]]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Print"],
    CellMargins->{{45, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    CounterIncrements->"Print",
    StyleMenuListing->None,
    FontSize->16],
  
  Cell[StyleData["Print", "Presentation"],
    CellMargins->{{72, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Print", "Condensed"],
    CellMargins->{{41, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Print", "Printout"],
    CellMargins->{{39, Inherited}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Graphics"],
    CellMargins->{{4, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Graphics",
    ImageMargins->{{43, Inherited}, {Inherited, 0}},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontSize->10],
  
  Cell[StyleData["Graphics", "Presentation"],
    ImageMargins->{{62, Inherited}, {Inherited, 0}}],
  
  Cell[StyleData["Graphics", "Condensed"],
    ImageMargins->{{38, Inherited}, {Inherited, 0}},
    Magnification->0.6],
  
  Cell[StyleData["Graphics", "Printout"],
    ImageMargins->{{30, Inherited}, {Inherited, 0}},
    Magnification->0.8]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["CellLabel"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontColor->RGBColor[0, 0, 1]],
  
  Cell[StyleData["CellLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["CellLabel", "Condensed"],
    FontSize->9],
  
  Cell[StyleData["CellLabel", "Printout"],
    FontFamily->"Courier",
    FontSize->8,
    FontSlant->"Italic",
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Inline Formatting", "Section"],
  
  Cell["\<\
These styles are for modifying individual words or letters in a \
cell exclusive of the cell tag.\
\>", "Text"],
  
  Cell[StyleData["RM"],
    StyleMenuListing->None,
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["BF"],
    StyleMenuListing->None,
    FontWeight->"Bold"],
  
  Cell[StyleData["IT"],
    StyleMenuListing->None,
    FontSlant->"Italic"],
  
  Cell[StyleData["TR"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["TI"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["TB"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["TBI"],
    StyleMenuListing->None,
    FontFamily->"Times",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[StyleData["MR"],
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["MO"],
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["MB"],
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["MBO"],
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[StyleData["SR"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Plain",
    FontSlant->"Plain"],
  
  Cell[StyleData["SO"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SB"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain"],
  
  Cell[StyleData["SBO"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SO10"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->10,
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SO10", "Printout"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->7,
    FontWeight->"Plain",
    FontSlant->"Italic"],
  
  Cell[StyleData["SO10", "EnhancedPrintout"],
    StyleMenuListing->None,
    FontFamily->"Futura",
    FontSize->7,
    FontWeight->"Plain",
    FontSlant->"Italic"]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Formulas and Programming", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["InlineFormula"],
    CellMargins->{{10, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    ScriptLevel->1,
    SingleLetterItalics->True],
  
  Cell[StyleData["InlineFormula", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["InlineFormula", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["InlineFormula", "Printout"],
    CellMargins->{{2, 0}, {6, 6}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DisplayFormula"],
    CellMargins->{{42, Inherited}, {Inherited, Inherited}},
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    ScriptLevel->0,
    SingleLetterItalics->True,
    UnderoverscriptBoxOptions->{LimitsPositioning->True}],
  
  Cell[StyleData["DisplayFormula", "Presentation"],
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["DisplayFormula", "Condensed"],
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["DisplayFormula", "Printout"],
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Program"],
    CellFrame->{{0, 0}, {0.5, 0.5}},
    CellMargins->{{10, 4}, {0, 8}},
    CellHorizontalScrolling->True,
    ScriptLevel->1,
    FontFamily->"Courier"],
  
  Cell[StyleData["Program", "Presentation"],
    CellMargins->{{24, 10}, {10, 10}},
    LineSpacing->{1, 5},
    FontSize->16],
  
  Cell[StyleData["Program", "Condensed"],
    CellMargins->{{8, 10}, {6, 6}},
    LineSpacing->{1, 1},
    FontSize->11],
  
  Cell[StyleData["Program", "Printout"],
    CellMargins->{{2, 0}, {6, 6}},
    FontSize->9]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Hyperlink Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Hyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonNote->ButtonData}],
  
  Cell[StyleData["Hyperlink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["Hyperlink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["Hyperlink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell["\<\
The following styles are for linking automatically to the on-line \
help system.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MainBookLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MainBook", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MainBookLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["MainBookLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["MainBookLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["AddOnsLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "AddOns", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["AddOnsLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["AddOnsLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["AddOnsLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuide", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["RefGuideLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["RefGuideLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["GettingStartedLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "GettingStarted", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["GettingStartedLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["GettingStartedLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["GettingStartedLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OtherInformationLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontColor->RGBColor[0, 0, 1],
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "OtherInformation", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["OtherInformationLink", "Presentation"],
    FontSize->16],
  
  Cell[StyleData["OtherInformationLink", "Condensed"],
    FontSize->11],
  
  Cell[StyleData["OtherInformationLink", "Printout"],
    FontSize->10,
    FontColor->GrayLevel[0],
    FontVariations->{"Underline"->False}]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headers and Footers", "Section"],
  
  Cell[StyleData["Header"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontSize->10,
    FontSlant->"Italic"],
  
  Cell[StyleData["Footer"],
    CellMargins->{{0, 0}, {0, 4}},
    StyleMenuListing->None,
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["PageNumber"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Times",
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Palette Styles", "Section"],
  
  Cell["\<\
The cells below define styles that define standard \
ButtonFunctions, for use in palette buttons.\
\>", "Text"],
  
  Cell[StyleData["Paste"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, After]}]&)}],
  
  Cell[StyleData["Evaluate"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        SelectionEvaluate[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["EvaluateCell"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionMove[ 
          FrontEnd`InputNotebook[ ], All, Cell, 1], 
        FrontEnd`SelectionEvaluateCreateCell[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["CopyEvaluate"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`SelectionCreateCell[ 
          FrontEnd`InputNotebook[ ], All], 
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluate[ 
          FrontEnd`InputNotebook[ ], All]}]&)}],
  
  Cell[StyleData["CopyEvaluateCell"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`SelectionCreateCell[ 
          FrontEnd`InputNotebook[ ], All], 
        FrontEnd`NotebookApply[ 
          FrontEnd`InputNotebook[ ], #, All], 
        FrontEnd`SelectionEvaluateCreateCell[ 
          FrontEnd`InputNotebook[ ], All]}]&)}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Placeholder Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making placeholder \
objects in palette templates.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Placeholder"],
    Placeholder->True,
    StyleMenuListing->None,
    FontSlant->"Italic",
    FontColor->RGBColor[0.890623, 0.864698, 0.384756],
    TagBoxOptions->{Editable->False,
    Selectable->False,
    StripWrapperBoxes->False}],
  
  Cell[StyleData["Placeholder", "Presentation"]],
  
  Cell[StyleData["Placeholder", "Condensed"]],
  
  Cell[StyleData["Placeholder", "Printout"]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["PrimaryPlaceholder"],
    StyleMenuListing->None,
    DrawHighlighted->True,
    FontSlant->"Italic",
    Background->RGBColor[0.912505, 0.891798, 0.507774],
    TagBoxOptions->{Editable->False,
    Selectable->False,
    StripWrapperBoxes->False}],
  
  Cell[StyleData["PrimaryPlaceholder", "Presentation"]],
  
  Cell[StyleData["PrimaryPlaceholder", "Condensed"]],
  
  Cell[StyleData["PrimaryPlaceholder", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["FormatType Styles", "Section"],
  
  Cell["\<\
The cells below define styles that are mixed in with the styles \
of most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options. This is particularly true of Input and Output.\
\>", "Text"],
  
  Cell[StyleData["CellExpression"],
    PageWidth->Infinity,
    CellMargins->{{6, Inherited}, {Inherited, Inherited}},
    ShowCellLabel->False,
    ShowSpecialCharacters->False,
    AllowInlineCells->False,
    AutoItalicWords->{},
    StyleMenuListing->None,
    FontFamily->"Courier",
    FontSize->12,
    Background->GrayLevel[1]],
  
  Cell[StyleData["InputForm"],
    AllowInlineCells->False,
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["OutputForm"],
    PageWidth->Infinity,
    TextAlignment->Left,
    LineSpacing->{0.6, 1},
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["StandardForm"],
    LineSpacing->{1.25, 0},
    StyleMenuListing->None,
    FontFamily->"Courier"],
  
  Cell[StyleData["TraditionalForm"],
    LineSpacing->{1.25, 0},
    SingleLetterItalics->True,
    TraditionalFunctionNotation->True,
    DelimiterMatching->None,
    StyleMenuListing->None],
  
  Cell["\<\
The style defined below is mixed in to any cell that is in an \
inline cell within another.\
\>", "Text"],
  
  Cell[StyleData["InlineCell"],
    TextAlignment->Left,
    ScriptLevel->1,
    StyleMenuListing->None],
  
  Cell[StyleData["InlineCellEditing"],
    StyleMenuListing->None,
    Background->RGBColor[1, 0.749996, 0.8]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Automatic Styles", "Section"],
  
  Cell["\<\
The cells below define styles that are used to affect the display \
of certain types of objects in typeset expressions.  For example, \
\"UnmatchedBracket\" style defines how unmatched bracket, curly bracket, and \
parenthesis characters are displayed (typically by coloring them to make them \
stand out).\
\>", "Text"],
  
  Cell[StyleData["UnmatchedBracket"],
    StyleMenuListing->None,
    FontColor->RGBColor[0.760006, 0.330007, 0.8]]
  }, Closed]]
  }, Open  ]]
  }]
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 306, 8, 144, "Title",
  Evaluatable->False],
Cell[2085, 63, 61, 0, 64, "Subtitle"],
Cell[2149, 65, 386, 12, 71, "Subtitle",
  Evaluatable->False],

Cell[CellGroupData[{
Cell[2560, 81, 104, 2, 55, "Section",
  Evaluatable->False],
Cell[2667, 85, 2702, 64, 639, "Text",
  Evaluatable->False]
}, Open  ]],

Cell[CellGroupData[{
Cell[5406, 154, 89, 2, 55, "Section",
  Evaluatable->False],
Cell[5498, 158, 480, 16, 83, "Text"],
Cell[5981, 176, 46, 1, 32, "Input"],
Cell[6030, 179, 105, 2, 37, "Text"],
Cell[6138, 183, 44, 1, 37, "Input"],
Cell[6185, 186, 81, 2, 37, "Text"],
Cell[6269, 190, 80, 1, 32, "Input"],
Cell[6352, 193, 86, 2, 37, "Text"],
Cell[6441, 197, 174, 5, 60, "Text"],
Cell[6618, 204, 47, 1, 32, "Input"],
Cell[6668, 207, 469, 12, 106, "Text"],
Cell[7140, 221, 51, 1, 32, "Input"],
Cell[7194, 224, 66, 2, 37, "Text"],
Cell[7263, 228, 47, 1, 32, "Input"],
Cell[7313, 231, 191, 6, 60, "Text"],
Cell[7507, 239, 295, 8, 60, "Text"],
Cell[7805, 249, 49, 1, 32, "Input"],
Cell[7857, 252, 54, 1, 32, "Input"],
Cell[7914, 255, 242, 7, 60, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[8193, 267, 75, 2, 35, "Section",
  Evaluatable->False],
Cell[8271, 271, 254, 8, 60, "Text"],
Cell[8528, 281, 70, 1, 32, "Input"],
Cell[8601, 284, 260, 8, 60, "Text"],
Cell[8864, 294, 164, 5, 37, "Text"],
Cell[9031, 301, 88, 1, 32, "Input"],
Cell[9122, 304, 83, 1, 32, "Input"],
Cell[9208, 307, 360, 14, 37, "Text"],
Cell[9571, 323, 107, 2, 37, "Text"],
Cell[9681, 327, 132, 6, 92, "Input"],
Cell[9816, 335, 340, 11, 60, "Text"],
Cell[10159, 348, 58, 1, 32, "Input"],
Cell[10220, 351, 358, 11, 60, "Text"],
Cell[10581, 364, 254, 4, 88, "Input"],
Cell[10838, 370, 43, 1, 37, "Input"],
Cell[10884, 373, 211, 6, 60, "Text"],
Cell[11098, 381, 422, 15, 272, "Input"],
Cell[11523, 398, 291, 10, 60, "Text"],
Cell[11817, 410, 204, 7, 37, "Text"],
Cell[12024, 419, 136, 2, 78, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[12197, 426, 87, 2, 35, "Section",
  Evaluatable->False],
Cell[12287, 430, 192, 6, 37, "Text"],
Cell[12482, 438, 62, 1, 32, "Input"],
Cell[12547, 441, 95, 2, 37, "Text"],
Cell[12645, 445, 42, 1, 37, "Input"],
Cell[12690, 448, 79, 2, 37, "Text"],
Cell[12772, 452, 42, 1, 37, "Input"],
Cell[12817, 455, 112, 2, 37, "Text"],
Cell[12932, 459, 46, 1, 37, "Input"],
Cell[12981, 462, 117, 2, 37, "Text"],
Cell[13101, 466, 56, 1, 32, "Input"],
Cell[13160, 469, 102, 2, 37, "Text"],
Cell[13265, 473, 54, 1, 32, "Input"],
Cell[13322, 476, 327, 11, 60, "Text"],
Cell[13652, 489, 80, 1, 32, "Input"],
Cell[13735, 492, 96, 2, 37, "Text"],
Cell[13834, 496, 40, 1, 32, "Input"],
Cell[13877, 499, 237, 7, 60, "Text"],
Cell[14117, 508, 104, 2, 32, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[14258, 515, 84, 2, 35, "Section",
  Evaluatable->False],
Cell[14345, 519, 84, 2, 37, "Text"],
Cell[14432, 523, 67, 1, 32, "Input"],
Cell[14502, 526, 84, 2, 37, "Text"],
Cell[14589, 530, 56, 1, 32, "Input"],
Cell[14648, 533, 280, 8, 60, "Text"],
Cell[14931, 543, 78, 1, 32, "Input"],
Cell[15012, 546, 177, 7, 37, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[15226, 558, 72, 2, 35, "Section",
  Evaluatable->False],
Cell[15301, 562, 258, 8, 60, "Text"],
Cell[15562, 572, 80, 1, 32, "Input"],
Cell[15645, 575, 94, 2, 37, "Text"],
Cell[15742, 579, 70, 1, 32, "Input"],
Cell[15815, 582, 89, 2, 37, "Text"],
Cell[15907, 586, 74, 1, 32, "Input"],
Cell[15984, 589, 97, 2, 37, "Text"],
Cell[16084, 593, 74, 1, 32, "Input"],
Cell[16161, 596, 136, 5, 37, "Text"],
Cell[16300, 603, 107, 4, 52, "Input"],
Cell[16410, 609, 66, 1, 32, "Input"],
Cell[16479, 612, 222, 7, 60, "Text"],
Cell[16704, 621, 59, 1, 32, "Input"],
Cell[16766, 624, 69, 2, 37, "Text"],
Cell[16838, 628, 56, 1, 32, "Input"],
Cell[16897, 631, 119, 2, 37, "Text"],
Cell[17019, 635, 57, 1, 32, "Input"],
Cell[17079, 638, 61, 1, 32, "Input"],
Cell[17143, 641, 139, 5, 37, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[17319, 651, 85, 2, 35, "Section",
  Evaluatable->False],
Cell[17407, 655, 89, 2, 37, "Text"],
Cell[17499, 659, 72, 1, 32, "Input"],
Cell[17574, 662, 73, 2, 37, "Text"],
Cell[17650, 666, 50, 1, 32, "Input"],
Cell[17703, 669, 99, 2, 37, "Text"],
Cell[17805, 673, 51, 1, 32, "Input"],
Cell[17859, 676, 105, 2, 37, "Text"],
Cell[17967, 680, 53, 1, 32, "Input"],
Cell[18023, 683, 88, 2, 37, "Text"],
Cell[18114, 687, 59, 1, 32, "Input"],
Cell[18176, 690, 141, 5, 37, "Text"],
Cell[18320, 697, 66, 1, 32, "Input"],
Cell[18389, 700, 65, 1, 32, "Input"],
Cell[18457, 703, 114, 2, 37, "Text"],
Cell[18574, 707, 67, 1, 32, "Input"],
Cell[18644, 710, 222, 6, 60, "Text"],
Cell[18869, 718, 152, 5, 37, "Text"],
Cell[19024, 725, 65, 1, 32, "Input"],
Cell[19092, 728, 66, 1, 32, "Input"],
Cell[19161, 731, 65, 1, 32, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[19263, 737, 94, 2, 35, "Section",
  Evaluatable->False],
Cell[19360, 741, 302, 8, 60, "Text"],
Cell[19665, 751, 56, 1, 32, "Input"],
Cell[19724, 754, 93, 2, 37, "Text"],
Cell[19820, 758, 60, 1, 32, "Input"],
Cell[19883, 761, 137, 5, 37, "Text"],
Cell[20023, 768, 58, 1, 32, "Input"],
Cell[20084, 771, 209, 6, 60, "Text"],
Cell[20296, 779, 68, 1, 32, "Input"],
Cell[20367, 782, 118, 2, 37, "Text"],
Cell[20488, 786, 60, 1, 32, "Input"],
Cell[20551, 789, 142, 5, 37, "Text"],
Cell[20696, 796, 66, 1, 32, "Input"],
Cell[20765, 799, 212, 7, 37, "Text"],
Cell[20980, 808, 46, 1, 37, "Input"],
Cell[21029, 811, 191, 7, 37, "Text"],
Cell[21223, 820, 50, 1, 37, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[21310, 826, 72, 2, 35, "Section",
  Evaluatable->False],
Cell[21385, 830, 191, 6, 37, "Text"],
Cell[21579, 838, 82, 1, 37, "Input"],
Cell[21664, 841, 185, 7, 37, "Text"],
Cell[21852, 850, 76, 1, 37, "Input"],
Cell[21931, 853, 122, 2, 37, "Input"],
Cell[22056, 857, 252, 6, 60, "Text"],
Cell[22311, 865, 123, 2, 37, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[22471, 872, 74, 2, 35, "Section",
  Evaluatable->False],
Cell[22548, 876, 207, 7, 37, "Text"],
Cell[22758, 885, 265, 6, 122, "Input"],
Cell[23026, 893, 112, 2, 37, "Text"],
Cell[23141, 897, 41, 1, 37, "Input"],
Cell[23185, 900, 275, 8, 60, "Text"],
Cell[23463, 910, 60, 1, 37, "Input"],
Cell[23526, 913, 161, 5, 37, "Text"],
Cell[23690, 920, 45, 1, 32, "Input"],
Cell[23738, 923, 334, 10, 83, "Text"],
Cell[24075, 935, 42, 1, 32, "Input"],
Cell[24120, 938, 225, 7, 60, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[24382, 950, 87, 2, 35, "Section",
  Evaluatable->False],
Cell[24472, 954, 392, 11, 83, "Text"],
Cell[24867, 967, 70, 1, 37, "Input"],
Cell[24940, 970, 47, 1, 37, "Input"],
Cell[24990, 973, 145, 5, 37, "Text"],
Cell[25138, 980, 68, 2, 60, "Input"],
Cell[25209, 984, 61, 2, 60, "Input"],
Cell[25273, 988, 75, 3, 83, "Input"],
Cell[25351, 993, 60, 2, 60, "Input"],
Cell[25414, 997, 94, 2, 37, "Text"],
Cell[25511, 1001, 67, 2, 60, "Input"],
Cell[25581, 1005, 88, 2, 65, "Input"],
Cell[25672, 1009, 92, 2, 60, "Input"],
Cell[25767, 1013, 85, 2, 60, "Input"],
Cell[25855, 1017, 75, 2, 60, "Input"],
Cell[25933, 1021, 157, 5, 37, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[26127, 1031, 76, 2, 35, "Section",
  Evaluatable->False],
Cell[26206, 1035, 213, 7, 37, "Text"],
Cell[26422, 1044, 61, 1, 32, "Input"],
Cell[26486, 1047, 82, 2, 37, "Text"],
Cell[26571, 1051, 70, 1, 32, "Input"],
Cell[26644, 1054, 66, 2, 37, "Text"],
Cell[26713, 1058, 78, 1, 32, "Input"],
Cell[26794, 1061, 217, 6, 60, "Text"],
Cell[27014, 1069, 53, 1, 32, "Input"],
Cell[27070, 1072, 53, 1, 32, "Input"],
Cell[27126, 1075, 53, 1, 32, "Input"],
Cell[27182, 1078, 189, 5, 60, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[27408, 1088, 78, 2, 35, "Section",
  Evaluatable->False],
Cell[27489, 1092, 178, 7, 37, "Text"],
Cell[27670, 1101, 251, 8, 60, "Text"],
Cell[27924, 1111, 95, 4, 52, "Input"],
Cell[28022, 1117, 73, 2, 37, "Text"],
Cell[28098, 1121, 53, 1, 32, "Input"],
Cell[28154, 1124, 647, 15, 152, "Text"],
Cell[28804, 1141, 107, 4, 52, "Input"],
Cell[28914, 1147, 62, 1, 32, "Input"],
Cell[28979, 1150, 68, 1, 32, "Input"],
Cell[29050, 1153, 66, 1, 32, "Input"],
Cell[29119, 1156, 186, 5, 60, "Text"],
Cell[29308, 1163, 548, 13, 129, "Text"],
Cell[29859, 1178, 210, 8, 132, "Input"],
Cell[30072, 1188, 70, 1, 32, "Input"],
Cell[30145, 1191, 205, 7, 37, "Text"],
Cell[30353, 1200, 36, 1, 32, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[30426, 1206, 144, 6, 35, "Section",
  Evaluatable->False],
Cell[30573, 1214, 233, 7, 60, "Text"],
Cell[30809, 1223, 71, 1, 32, "Input"],
Cell[30883, 1226, 104, 2, 37, "Text"],
Cell[30990, 1230, 71, 1, 32, "Input"],
Cell[31064, 1233, 74, 1, 32, "Input"],
Cell[31141, 1236, 71, 1, 32, "Input"],
Cell[31215, 1239, 122, 2, 37, "Text"],
Cell[31340, 1243, 71, 1, 32, "Input"],
Cell[31414, 1246, 71, 1, 32, "Input"],
Cell[31488, 1249, 113, 2, 37, "Text"],
Cell[31604, 1253, 64, 1, 32, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

