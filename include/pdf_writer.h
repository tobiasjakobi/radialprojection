/*  radialprojection - tools to numerically compute the radial projection of point sets
 *  Copyright (C) 2012-2016 - Tobias Jakobi <tjakobi at math dot uni dash bielefeld dot de>
 *
 *  radialprojection is free software: you can redistribute it and/or modify it under the terms
 *  of the GNU General Public License as published by the Free Software Foundation, either
 *  version 3 of the License, or (at your option) any later version.
 *
 *  radialprojection is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE. See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with radialprojection.
 *  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _PDF_WRITER_H_
#define _PDF_WRITER_H_

#include "arith_visibility.h"

/* Import of raw data (from the console) generated by 'exportRawConsole' *
 * from the arithmetic visibility part of the program.                   */
void importRawConsole(vector<ArithVisibility::bragg>& output,
                      vec2d& range, double& radius);

/* Plot a diffraction pattern (a list of Bragg peaks) directly to a PDF. *
 * Cairo is used as rendering engine. This avoids the export as a        *
 * human-readable file, which is then proceed in SAGE.                   */
void braggToPDF(const vector<ArithVisibility::bragg>& input,
                const vec2d& range, const double radius,
                const string& filename, bool fill);

#endif
